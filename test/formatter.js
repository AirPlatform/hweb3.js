import 'babel-polyfill';
import { assert } from 'chai';
import _ from 'lodash';

import Utils from '../src/utils';
import Formatter from '../src/formatter';
import ContractMetadata from './data/contract_metadata';

const CONTRACT_ADDRESS = 'f6464ab9222b959a50765ac5c4889f8c3fe24241';
const CONTRACT_ABI = [{
  constant: true,
  inputs: [{ name: '', type: 'bytes32' }],
  name: 'topics',
  outputs: [{ name: '', type: 'address' }],
  payable: false,
  stateMutability: 'view',
  type: 'function',
}, {
  constant: false,
  inputs: [{ name: '_resultSetter', type: 'address' }, { name: '_name', type: 'bytes' }, { name: '_resultNames', type: 'bytes32[]' }, { name: '_bettingEndBlock', type: 'uint256' }],
  name: 'createTopic',
  outputs: [{ name: 'tokenAddress', type: 'address' }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function',
}, {
  constant: true,
  inputs: [{ name: '_name', type: 'bytes' }, { name: '_resultNames', type: 'bytes32[]' }, { name: '_bettingEndBlock', type: 'uint256' }],
  name: 'doesTopicExist',
  outputs: [{ name: '', type: 'bool' }],
  payable: false,
  stateMutability: 'view',
  type: 'function',
}, {
  inputs: [{ name: '_addressManager', type: 'address' }],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'constructor',
}, {
  anonymous: false,
  inputs: [{ indexed: true, name: '_creator', type: 'address' }, { indexed: false, name: '_topicEvent', type: 'address' }, { indexed: false, name: '_name', type: 'bytes' }, { indexed: false, name: '_resultNames', type: 'bytes32[]' }, { indexed: false, name: '_bettingEndBlock', type: 'uint256' }],
  name: 'TopicCreated',
  type: 'event',
}];

describe('Formatter', () => {
  describe('searchLogOutput', function() {
    const rawOutput = [
      {
        "blockHash": "1bfca6e1c401865982121000a60a5f7f32839e124486891fd2d34bd6e1052de2",
        "blockNumber": 50344,
        "transactionHash": "4c24f818a41c5c4288f5ca288a21477063c67df055946bb54650efad288add56",
        "transactionIndex": 2,
        "from": "17e7888aa7412a735f336d2f6d784caefabb6fa3",
        "to": "d53927df927be7fc51ce8bf8b998cb6611c266b0",
        "cumulativeGasUsed": 3409568,
        "gasUsed": 3409568,
        "contractAddress": "d53927df927be7fc51ce8bf8b998cb6611c266b0",
        "log": [
          {
            "address": "6d5b0ec97475e8d854efddc81d3a1d0f0f019669",
            "topics": [
                "c46e722c8158268af789d6a68206785f8d497869da236f87c2014c1c08fd3dec",
                "0000000000000000000000009697b1f2701ca9434132723ee790d1cb0ab0e414",
                "00000000000000000000000017e7888aa7412a735f336d2f6d784caefabb6fa3",
                "000000000000000000000000a51f3252ff700df157b4633d1fa563fbcbe6e8fd"
            ],
            "data": "4265737420646f6720746f206f776e3fc6500000000000000000000000000000000000000000000000000004875736b79000000000000000000000000000000000000000000000000000000476f6c64656ec4a9000000000000000000000000000000000000000000000000000000000000c4e000000000000000000000000000000000000000000000000000000002540be400"
          },
          {
            "address": "d53927df927be7fc51ce8bf8b998cb6611c266b0",
            "topics": [
                "b7fa6f4e0c226cf0645f9f983dbc0bb4bb971400b98fae2387487d6d810c9c56",
                "000000000000000000000000a51f3252ff700df157b4633d1fa563fbcbe6e8fd",
                "00000000000000000000000017e7888aa7412a735f336d2f6d784caefabb6fa3",
                "00000000000000000000000017e7888aa7412a735f336d2f6d784caefabb6fa3"
            ],
            "data": "4265737420646f6720746f206f776e3fc6500000000000000000000000000000000000000000000000000004875736b79000000000000000000000000000000000000000000000000000000476f6c64656ec4a9000000000000000000000000000000000000000000000000000000000000c4e0"
          }
        ]
      }
    ];

    it('returns the formatted searchlog output', async function() {
      const formatted = Formatter.searchLogOutput(rawOutput, ContractMetadata, true);

      // CentralizedOracleCreated event
      const log0 = formatted[0].log[0];
      assert.equal(log0._eventName, 'CentralizedOracleCreated');
      assert.equal(log0._contractAddress, '9697b1f2701ca9434132723ee790d1cb0ab0e414');
      assert.equal(log0._oracle, '17e7888aa7412a735f336d2f6d784caefabb6fa3');
      assert.equal(log0._eventAddress, 'a51f3252ff700df157b4633d1fa563fbcbe6e8fd');

      const name = [
        '4265737420646f6720746f206f776e3f00000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000'
      ];
      assert.deepEqual(log0._name, name);

      const resultNames = [
        '426561676c650000000000000000000000000000000000000000000000000000',
        '4875736b79000000000000000000000000000000000000000000000000000000',
        '476f6c64656e2052657472696576657200000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000' 
      ];
      assert.deepEqual(log0._resultNames, resultNames);
      assert.equal(log0._numOfResults, 3);
      assert.equal(log0._bettingEndBlock, 0xc4a9);
      assert.equal(log0._resultSettingEndBlock, 0xc4e0);
      assert.equal(log0._consensusThreshold, 0x2540be400);

      // TopicCreated event
      const log1 = formatted[0].log[1];
      assert.equal(log1._eventName, 'TopicCreated');
      assert.equal(log1._topicAddress, 'a51f3252ff700df157b4633d1fa563fbcbe6e8fd');
      assert.equal(log1._creator, '17e7888aa7412a735f336d2f6d784caefabb6fa3');
      assert.equal(log1._oracle, '17e7888aa7412a735f336d2f6d784caefabb6fa3');
      assert.deepEqual(log1._name, name);
      assert.deepEqual(log1._resultNames, resultNames);
      assert.equal(log1._bettingEndBlock, 0xc4a9);
      assert.equal(log1._resultSettingEndBlock, 0xc4e0);
    });
  });

  describe('methods', () => {

    /** Validate that Formatter.searchLogOutput resturns expected results */
    it('searchLogOutput', (done) => {
      let logs = [{
        "blockHash": "10aa1bf45327d879bdb00db388986098b6a4cbbb6d8d5f823b65dd35968e5015",
        "blockNumber": 31774,
        "transactionHash": "481d49ee544b65e769e71f2ecaa4a2b07133d0e0081abf80efaf9fdfefd59db7",
        "transactionIndex": 2,
        "from": "e34f17c07c3c023095788c7ebb6d5b845608beea",
        "to": "f6464ab9222b959a50765ac5c4889f8c3fe24241",
        "cumulativeGasUsed": 724281,
        "gasUsed": 724281,
        "contractAddress": "f6464ab9222b959a50765ac5c4889f8c3fe24241",
        "log": [{
            "address": "c72a8213cf1b2e832a1c791f4f2843d5c03447a8",
            "topics": [
              "99a22f51dd06fe2274374184655c153b53126acd2028c2d9cda50d7be5dfff0e"
            ],
            "data": "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000a6669727374546f70696300000000000000000000000000000000000000000000"
          },
          {
            "address": "f6464ab9222b959a50765ac5c4889f8c3fe24241",
            "topics": [
              "382e62114f64d453f3b5c053e57839bdd9a0bfb9d63acd772a7b1572ffdd5df7",
              "000000000000000000000000e34f17c07c3c023095788c7ebb6d5b845608beea"
            ],
            "data": "000000000000000000000000c72a8213cf1b2e832a1c791f4f2843d5c03447a8000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000080e8000000000000000000000000000000000000000000000000000000000000000a6669727374546f706963000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002726573756c743100000000000000000000000000000000000000000000000000726573756c743200000000000000000000000000000000000000000000000000"
          }
        ]
      }];

      let formatted = Formatter.searchLogOutput(logs, CONTRACT_ABI);

      // Bodhi contract specific - convert byte and byte32 to string
      _.each(formatted, (resultEntry) => {
        if (!_.isEmpty(resultEntry.log)) {
          _.each(resultEntry.log, (logEntry) => {
            _.each(logEntry, (value, key) => {
              // Convert value of field '_name' (byte32[]) and '_resultNames' (byte32[])
              if (key === '_name') {
                logEntry[key] = Utils.toAscii(value);
              } else if (key === '_resultNames') {
                logEntry[key] = _.map(value, (val) => Utils.toAscii(val));
              } else if (key === '_bettingEndBlock') {
                logEntry[key] = value.toNumber();
              }
            });
          })
        }
      });

      done();
    });
  });
});